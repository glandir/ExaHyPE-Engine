// This file is generated by the ExaHyPE toolkit.
// Please do not modify - it will be overwritten by the next
// ExaHyPE toolkit call.
// 
// ========================
//   www.exahype.eu
// ========================
#include "exahype/plotters/Plotter.h"
#include "exahype/solvers/LimitingADERDGSolver.h"
namespace CCZ4{
  class IntegralsWriter;
  
  class CCZ4Solver_ADERDG;
  class CCZ4Solver_FV;
}

#include "AbstractCCZ4Solver_ADERDG.h"
#include "exahype/plotters/ascii/MultipleReductionsWriter.h"


class CCZ4::IntegralsWriter: public exahype::plotters::Plotter::UserOnTheFlyPostProcessing{
  public:
  static const int nVar = CCZ4::AbstractCCZ4Solver_ADERDG::NumberOfVariables;
  bool plotForADERSolver;
  
  exahype::plotters::ascii::MultipleReductionsWriter fields;
  exahype::plotters::ascii::MultipleReductionsWriter errors;
  //reductions::ReductionsWriter statistics;

  IntegralsWriter();
  IntegralsWriter(CCZ4Solver_ADERDG&  solver);
  IntegralsWriter(CCZ4Solver_FV&  solver);
  IntegralsWriter(exahype::solvers::LimitingADERDGSolver&  solver);
  virtual ~IntegralsWriter();
  void startPlotting(double time) override;
  void finishPlotting() override;
  void mapQuantities(
    const tarch::la::Vector<DIMENSIONS, double>& offsetOfPatch,
    const tarch::la::Vector<DIMENSIONS, double>& sizeOfPatch,
    const tarch::la::Vector<DIMENSIONS, double>& x,
    const tarch::la::Vector<DIMENSIONS, int>&    pos,
    double* Q,
    double* outputQuantities,
    double timeStamp) override;
};
