/**
 * This file is part of the ExaHyPE project.
 * Copyright (c) 2016  http://exahype.eu
 * All rights reserved.
 *
 * The project has received funding from the European Union's Horizon 
 * 2020 research and innovation programme under grant agreement
 * No 671698. For copyrights and licensing, please consult the webpage.
 *
 * Released under the BSD 3 Open Source License.
 * For the full license text, see LICENSE.txt
 **/
 
/**

 DIM, Diffuse Interface Method

 */
exahype-project DIM

  peano-kernel-path const          = ./Peano
  exahype-path const               = ./ExaHyPE
  output-directory const           = ./ApplicationExamples/DIM_LimitingADERDG
  architecture const               = noarch
  log-file                         = whatever.log

  computational-domain
    dimension const                = 2
    width                          = 2.0, 2.0
    offset                         = -1.0, -1.0
    end-time                       = 1.0
  end computational-domain
  
  shared-memory
    identifier               = dummy
    cores                    = 4
    properties-file          = sharedmemory.properties
  end shared-memory  
  
  distributed-memory
    identifier               = static_load_balancing
    configure                = {hotspot,fair,ranks_per_node:10}
    buffer-size              = 64
    timeout                  = 60
  end distributed-memory

  optimisation
    fuse-algorithmic-steps          = on
    fuse-algorithmic-steps-factor   = 0.99
    timestep-batch-factor           = 0.0
    skip-reduction-in-batched-time-steps = on
    disable-amr-if-grid-has-been-stationary-in-previous-iteration = off
    double-compression = 0.0
    spawn-double-compression-as-background-thread = on
  end optimisation

  solver Limiting-ADER-DG DIMSolver
    /* gamma is actually parts of a matrix... */
    variables const                = sigma:6,vel:3,lambda:1,mu:1,rho:1,alpha:1,xi:1
    order const                    = 3
    maximum-mesh-size              = 0.4
    maximum-mesh-depth             = 2
    time-stepping                  = global
    kernel const                   = generic::fluxes::nonlinear
    language const                 = C
    limiter-kernel const           = generic::musclhancock 
    limiter-language const         = C 
    dmp-relaxation-parameter       = 1e-2 
    dmp-difference-scaling         = 1e-3 
    steps-till-cured         = 0

    plot vtk::Cartesian::vertices::limited::binary PrimitiveWriter
      variables const = 14
      time      = 0.0
      repeat    = 1e-5
      output    = ./vtk-output/conserved
      select    = x:0.0,y:0.0
    end plot
  end solver
end exahype-project
