/**
 * 
 * NavierStokes
 * 
 * This setup corresponds to the Finite Volume demonstrator code as discussed in 
 * Section 2 of the guidebook. To keep stuff here extremely simple, the spec file 
 * does not contain any global-optimisations or any parallelisation. How to add parallel
 * features is solely described in the guidebook.
 * 
 * 
 * This file is part of the ExaHyPE project.
 * Copyright (c) 2016  http://exahype.eu
 * All rights reserved.
 *
 * The project has received funding from the European Union's Horizon 
 * 2020 research and innovation programme under grant agreement
 * No 671698. For copyrights and licensing, please consult the webpage.
 *
 * Released under the BSD 3 Open Source License.
 * For the full license text, see LICENSE.txt
 */
exahype-project NavierStokesADERDG
  peano-kernel-path const          = ./Peano
  exahype-path const               = ./ExaHyPE
  output-directory const           = ./ApplicationExamples/NavierStokes/NavierStokesADERDG_2D

  computational-domain
    dimension const         = 2
    width                   = 6.283, 6.283
    offset                  = 0.0,0.0
    /*-3.14159, -3.14159*/
    end-time                = 1.0
  end computational-domain
 
  /*
   ===========================================
   Comment this stuff in to get an MPI version
   ===========================================
  distributed-memory
    identifier               = static_load_balancing
    configure                = {greedy-naive,FCFS}
    buffer-size              = 64
    timeout                  = 60
  end distributed-memory
  */
  
  solver Limiting-ADER-DG MyNavierStokesSolver
    variables const            = rho:1,j:3,E:1
    order const                = 5
    maximum-mesh-size          = 2
    maximum-mesh-depth         = 0
    time-stepping              = global
    type const                 = nonlinear, Legendre
    terms const                = parabolicflux
    optimisation const         = generic
    language const             = C
    limiter-type const         = godunov
    limiter-optimisation const = generic
    limiter-language const     = C
    dmp-observables     const  = 5
    dmp-relaxation-parameter   = 1e-4
    dmp-difference-scaling     = 1e-3

    plot vtu::Cartesian::cells::ascii NavierStokesWriter
      variables const = 5
      time            = 0.0
      repeat          = 0.01
      output          = ./VtkOutput/variables
    end plot

    plot vtu::Cartesian::cells::ascii PressureWriter
      variables const = 1
      time            = 0.0
      repeat          = 0.01
      output          = ./VtkOutput/pressure
    end plot

  end solver
end exahype-project
