/**
 * This file is part of the ExaHyPE project.
 * Copyright (c) 2016  http://exahype.eu
 * All rights reserved.
 *
 * The project has received funding from the European Union's Horizon 
 * 2020 research and innovation programme under grant agreement
 * No 671698. For copyrights and licensing, please consult the webpage.
 *
 * Released under the BSD 3 Open Source License.
 * For the full license text, see LICENSE.txt
 **/
 
/**

 Elastic Wave

 A simple project. (well, it was simple, in the beginning).

 */
exahype-project  Elastic

  peano-kernel-path const = ./Peano
  exahype-path const      = ./ExaHyPE
  output-directory const  = ./ApplicationExamples/TestCases/linear_static_amr_test
  architecture const      = hsw
  log-file                = mylogfile.log

  computational-domain
    dimension const          = 3
    width                    = 20.0, 20.0, 20.0
    offset                   = -20.0, 0.0, -20.0
    end-time                 = 10.0
  end computational-domain

  shared-memory
    identifier               = dummy
    configure                = {background-tasks:28}	
    cores                    = 28
    properties-file          = sharedmemory.properties
  end shared-memory

  distributed-memory
     identifier               = static_load_balancing
     configure                = {hotspot,fair,ranks-per-node:1}
     buffer-size              = 1600
     timeout                  = 6000
  end distributed-memory

  global-optimisation
    fuse-algorithmic-steps                          = on
    fuse-algorithmic-steps-factor                   = 0.99
    spawn-predictor-as-background-thread            = on
    spawn-amr-background-threads                    = on
    disable-vertex-exchange-in-time-steps           = on
    time-step-batch-factor                          = 1.0
    disable-metadata-exchange-in-batched-time-steps = on
    double-compression                              = 0.0
    spawn-double-compression-as-background-thread   = on
  end global-optimisation

  solver ADER-DG MyElasticWaveSolver
    variables const    = v:3,sigma:6
    parameters const  = rho:1,cp:1,cs:1
    order const        = 8
    /* 27 points: 0.05, 9 points: 0.15 */
    maximum-mesh-size  = 9.0
    maximum-mesh-depth = 2
    time-stepping      = global
    type const         = linear, Legendre
    terms const        = flux,ncp,materialparameters,pointsources:1
    optimisation const = generic,patchwiseadjust
    language const     = C

    plot vtk::Legendre::vertices::ascii ConservedQuantitiesWriter
      variables const = 12
      time            = 0.0
      repeat          = 0.05
      output          = ./conserved
    end plot
  end solver
end exahype-project
