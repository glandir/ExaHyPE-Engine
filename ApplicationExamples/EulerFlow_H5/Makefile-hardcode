## Hard coded Makefile
PEANO_KERNEL_PEANO_PATH=../../Peano/peano
PEANO_KERNEL_TARCH_PATH=../../Peano/tarch
PEANO_TOOLBOX_MULTISCALELINKEDCELL_PATH=../../Peano/multiscalelinkedcell
PEANO_TOOLBOX_SHAREDMEMORY_ORACLES_PATH=../../Peano/sharedmemoryoracles
PEANO_TOOLBOX_MPI_BLANCING_PATH=../../Peano/mpibalancing
EXAHYPE_PATH=../../ExaHyPE
PROJECT_PATH=../../ApplicationExamples/EulerFlow_H5
EXECUTABLE=ExaHyPE-Euler 


PROJECT_CFLAGS+=-DALIGNMENT=16
# Several MPI variants face problems with multithreaded MPI. As we run into 
# such issues multiple times, we disable by default multithreaded MPI in ExaHyE. 
# However, feel free to give it a try in your code on your system by disabling 
# this flag. 
PROJECT_CFLAGS+=-DnoMultipleThreadsMayTriggerMPICalls
PROJECT_CFLAGS+=-DDim2
ifeq ($(SHAREDMEM),)
  SHAREDMEM=TBB
endif
ifeq ($(DISTRIBUTEDMEM),)
  DISTRIBUTEDMEM=MPI
endif

# Including the headers for HDF5 is easy.
# We probably don't need all of them:

PROJECT_CFLAGS+=-DHDF5
PROJECT_CFLAGS+=-I/usr/include/hdf5/serial -D_LARGEFILE64_SOURCE -D_LARGEFILE_SOURCE -Wdate-time -D_FORTIFY_SOURCE=2 -fstack-protector-strong

# linking to hdf5 is hard. I exctracted these here from
#   h5cc -show
#   pkg-config --libs hdf5
# but had to add the -l hdf5_cpp in order to work.

PROJECT_LFLAGS+=-L/usr/lib/x86_64-linux-gnu/hdf5/serial -lhdf5 -l hdf5_cpp /usr/lib/x86_64-linux-gnu/hdf5/serial/libhdf5_hl.a /usr/lib/x86_64-linux-gnu/hdf5/serial/libhdf5.a



-include ../../ExaHyPE/Makefile




all: 
	@echo Euler 
	@echo =================
	@echo An ExaHyPE solver, for H5 writing testing
