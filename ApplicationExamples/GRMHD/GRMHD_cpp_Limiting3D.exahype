/**
 * This file is part of the ExaHyPE project.
 * Copyright (c) 2016  http://exahype.eu
 * All rights reserved.
 *
 * The project has received funding from the European Union's Horizon 
 * 2020 research and innovation programme under grant agreement
 * No 671698. For copyrights and licensing, please consult the webpage.
 *
 * Released under the BSD 3 Open Source License.
 * For the full license text, see LICENSE.txt
 **/
 
/**

  The GRMHD PDE in the C++ formulation with ADERDG solver.

 */
exahype-project GRMHD

  peano-kernel-path const          = ./Peano
  exahype-path const               = ./ExaHyPE
  output-directory const           = ./ApplicationExamples/GRMHD/GRMHD_cpp
  architecture const               = noarch
  log-file                         = logs/whatever.log

  computational-domain
    dimension const                = 3
    width                          = 20.0, 20.0, 20.0
    offset                         = 0.0, 0.0, 0.0
    end-time                       = 10000.0
  end computational-domain
  
  shared-memory
    identifier               = dummy
    cores                    = 4
    properties-file          = sharedmemory.properties
  end shared-memory  
  
  distributed-memory
    identifier               = static_load_balancing
    configure                = {hotspot,fair,ranks_per_node:1}
    buffer-size              = 64
    timeout                  = 60
  end distributed-memory

  global-optimisation
    fuse-algorithmic-steps          = on
    fuse-algorithmic-steps-factor   = 0.99
    timestep-batch-factor           = 0.0
    skip-reduction-in-batched-time-steps = on
    disable-amr-if-grid-has-been-stationary-in-previous-iteration = off
    double-compression = 0.0
    spawn-double-compression-as-background-thread = on
  end global-optimisation

  solver Limiting-ADER-DG GRMHDSolver
    variables const                = rho:1,vel:3,E:1,B:3,psi:1,lapse:1,shift:3,gij:6,coordinates:3,check:1
    order const                    = 3
    maximum-mesh-size              = 6.6666669
    maximum-mesh-depth             = 1
    time-stepping                  = global
    type const = nonlinear
    terms const = flux,ncp,source
    optimisation const = generic
    language const                 = C

    // musclhancock doesnt work in the moment
    limiter-type const             = godunov
    limiter-optimisation const     = generic
    limiter-language const         = C
    dmp-observables                = 2
    dmp-relaxation-parameter       = 1e-2 
    dmp-difference-scaling         = 1e-3 
    steps-till-cured               = 0

    // Constants are currently working for FV solvers, but not for ADERDG solvers, therefore removing everywhere
    //constants                      = dummy:dummy
    /* not yet working: constants aka left:exact,right:exact,top:exact,bottom:exact,front:exact,back:exact */


    // BEGIN of comparing plotters

    plot vtk::Cartesian::vertices::limited::ascii ConservedWriter
      variables const = 23
      time      = 0.0
      repeat    = 0.00001
      output    = ./vtk-output/vtk-conserved-limited
    end plot

    plot vtk::Cartesian::vertices::ascii ConservedWriter
      variables const = 23
      time      = 0.0
      repeat    = 0.00001
      output    = ./vtk-output/vtk-conserved
    end plot

    plot Peano::Legendre::vertices::ascii ConservedWriter
      variables const = 23
      time      = 0.0
      repeat    = 0.00001
      output    = ./vtk-output/peano-ascii-conserved
    end plot

    plot Peano::Legendre::vertices::hdf5 ConservedWriter
      variables const = 23
      time      = 0.0
      repeat    = 0.00001
      output    = ./vtk-output/peano-hdf5-conserved
    end plot

    plot Carpet::Cartesian::Vertices::HDF5 ConservedWriter
      variables const = 23
      time = 0.0
      repeat = 0.00001
      output = ./hdf5/carpet-hdf5-conserved
    end plot

    // END of comparing plotters

    plot vtk::Legendre::vertices::binary DifferenceWithIDWriter
      variables const = 23
      time      = 0.0
      repeat    = 0.000666667
      output    = ./vtk-output/diff-with-id
    end plot

    plot vtk::Legendre::vertices::binary PrimitiveWriter
      variables const = 23
      time      = 0.0
      repeat    = 0.000666667
      output    = ./vtk-output/primitive-legendre
    end plot
    
    plot vtk::Cartesian::vertices::binary PrimitiveWriter
      variables const = 23
      time      = 0.0
      repeat    = 0.000666667
      output    = ./vtk-output/primitive-cartesian
    end plot
    
    plot Carpet::Cartesian::Vertices::HDF5 ConservedWriter
      variables const = 23
      time = 0.0
      repeat = 1000.000001
      output = ./hdf5/conserved
      select = x:0,y:0
    end plot
    
    plot Carpet::Cartesian::Vertices::HDF5 PrimitiveWriter
      variables const = 23
      time = 0.0
      repeat = 1000.000001
      output = ./hdf5/primitive
      select = x:0,y:0
    end plot

    plot vtk::Cartesian::cells::binary IntegralsWriter
      variables const = 0
      time = 0.0
      repeat = 0.000001
      output = ./output/global-integrals
    end plot

  end solver


end exahype-project
