##mexa  # This is an ExaHyPE meta specification v1 file.
#
# GRMHD with some benchmarks.
#
# To choose an individual solver:
#   Solver = DGSolver
# To choose a particular simulation:
#   Simulation = Shocktubes/RP1

<< "@mexa/exahype-single-base.xpar"

# DEBUGGING
#Simulation = Shocktubes/RP1
#Solver = DGSolver

# Options:
Options/solver/dg = DGsolver
Options/solver/fv = FVsolver
Options/solver/limiting = LimitingSolver
# This line makes trouble => should again debug and write a test for it.
### Options/simulation/shocktube_rp1 = Shocktubes/RP1


Project::Name = "GRMHD"
#Project::directory = "./ApplicationExamples/GRMHD/GRMHD_cpp"
Project::directory = "GMRHD_cpp"
Coord = Simulation/Coord
Coord::end_time = Simulation/end_time

BaseSolver::name = "GRMHDSolver"
BaseSolver::variables = "rho:1,vel:3,E:1,B:3,psi:1,lapse:1,shift:3,gij:6,coordinates:3,check:1"
BaseSolver::time_stepping = "global"
BaseSolver::maximum_mesh_size = Simulation/maximum_mesh_size
BaseSolver::maximum_mesh_depth = Simulation/maximum_mesh_depth

BaseKernel::terms = "flux,ncp,source"
BaseKernel::opt = "generic"
BaseKernel::language = "C"

####
#### Solvers
####

# The ADER-DG solver
DGSolver <= BaseSolver
DGSolver::type = "ADER-DG"
DGSolver::order = Simulation/order
DGSolver::kernel <= BaseKernel
DGSolver::kernel::type = "nonlinear"
DGSolver::plotter_type = "vtk::Legendre::vertices::binary"

# The Finite volume solver
FVSolver <= BaseSolver
FVSolver::type = "Finite-Volumes"
FVSolver::patch_size = 10
FVSolver::kernel <= BaseKernel
FVSolver::kernel::type = "godunov"
FVSolver::plotter_type = "vtk::Cartesian::vertices::binary"


# A limiting solver
LimitingSolver <= BaseSolver
LimitingSolver::type = "Limiting-ADER-DG"
LimitingSolver::order = DGSolver::order
LimitingSolver::kernel = DGSolver::kernel
LimitingSolver::limiter::kernel = FVSolver::kernel
LimitingSolver::limiter::observables = 2
LimitingSolver::limiter::relaxation_parameter = 0.01
LimitingSolver::limiter::difference_scaling = 0.001
LimitingSolver::limiter::steps_till_cured = 0
LimitingSolver::plotter_type = "vtk::Cartesian::vertices::limited::ascii"

# The plotters registration
Plotters::integrals <= writer/integrals
Plotters::conserved <= writer/conserved
Plotters::primitive <= writer/primitive
Plotters::conserved::type = Solver::plotter_type
Plotters::primitive::type = Solver::plotter_type


####
#### Plotters
####

RepeatedPlotter/time = 0.0
RepeatedPlotter/repeat = 0.001

AllQuantitiesPlotter <= RepeatedPlotter
AllQuantitiesPlotter/variables = "@{BaseSolver/variables}"

writer/integrals <= RepeatedPlotter
writer/integrals/type = FVSolver::plotter_type # the basis does not really change anything
writer/integrals/variables = 0
writer/integrals/name = "IntegralsWriter"
writer/integrals/output = "./output/global-integrals"

writer/conserved <= AllQuantitiesPlotter
writer/primitive <= AllQuantitiesPlotter
writer/diff      <= AllQuantitiesPlotter
writer/conserved/output = "./vtk-output/conserved"
writer/diff/output      = "./vtk-output/diff-with-id"
writer/primitive/output = "./vtk-output/primitive"
writer/conserved/name = "ConservedWriter"
writer/diff/name = "DifferenceWithIDWriter"
writer/primitive/name = "PrimitiveWriter"


####
#### Actual Simulations and InitialData
####

# What all Shocktubes share:
BaseShocktube/idfunc = "shocktube"
BaseShocktube/Coord/Dimension = 2
BaseShocktube/Coord/width_x = 1.0
BaseShocktube/Coord/width_y = 1.0
BaseShocktube/Coord/width_z = 1.0
BaseShocktube/Coord/offset_x = 0.0
BaseShocktube/Coord/offset_y = 0.0
BaseShocktube/Coord/offset_z = 0.0
BaseShocktube/end_time = 0.4
BaseShocktube/order = 3
BaseShocktube/sep_x = 0.5  # where to seperate left and right.

# TBD:
BaseShocktube/maximum_mesh_size = 0.0
BaseShocktube/maximum_mesh_depth = 0.0

# Shocktube boundaries:
BaseShocktube/Boundaries/left = "outflow"
BaseShocktube/Boundaries/right = "outflow"
BaseShocktube/Boundaries/top = "wall"
BaseShocktube/Boundaries/bottom = "wall"
# only 3D, not relevant
BaseShocktube/Boundaries/front = "illegal"
BaseShocktube/Boundaries/back = "illegal"

# The RP1 shocktube

Shocktubes/RP1 <= BaseShocktube
Shocktubes/RP1/gamma_C = 2.0

Shocktubes/RP1/adm/alpha = 1.0
Shocktubes/RP1/adm/beta/x = 0
Shocktubes/RP1/adm/beta/y = 0
Shocktubes/RP1/adm/beta/z = 0

Shocktubes/RP1/right < adm
Shocktubes/RP1/right/rho = 0.125
Shocktubes/RP1/right/vel/x = 0
Shocktubes/RP1/right/vel/y = 0
Shocktubes/RP1/right/vel/z = 0
Shocktubes/RP1/right/press = 0.1
Shocktubes/RP1/right/Bmag/x = 0.5
Shocktubes/RP1/right/Bmag/y = -1.0
Shocktubes/RP1/right/Bmag/z = 0.0

Shocktubes/RP1/left < adm
Shocktubes/RP1/left/rho = 1.0
Shocktubes/RP1/left/vel/x = 0
Shocktubes/RP1/left/vel/y = 0
Shocktubes/RP1/left/vel/z = 0
Shocktubes/RP1/left/press = 1.0
Shocktubes/RP1/left/Bmag/x = 0.5
Shocktubes/RP1/left/Bmag/y = +1.0
Shocktubes/RP1/left/Bmag/z = 0.0



# collect simulation steering data

Parameters::Boundaries = Simulation/Boundaries
Parameters::idfunc = Simulation/idfunc
Parameters::shocktube = Simulation