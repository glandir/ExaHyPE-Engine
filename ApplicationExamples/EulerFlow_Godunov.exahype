/**

 Euler Flow

 This setup corresponds to the Finite Volume demonstrator code as discussed in 
 Section 2 of the guidebook. To keep stuff here extremely simple, the spec file 
 does not contain any optimisations or any parallelisation. How to add parallel
 features is solely described in the guidebook.


 * This file is part of the ExaHyPE project.
 * Copyright (c) 2016  http://exahype.eu
 * All rights reserved.
 *
 * The project has received funding from the European Union's Horizon 
 * 2020 research and innovation programme under grant agreement
 * No 671698. For copyrights and licensing, please consult the webpage.
 *
 * Released under the BSD 3 Open Source License.
 * For the full license text, see LICENSE.txt


 */
exahype-project EulerFVM

  peano-kernel-path          = ./Peano
  exahype-path               = ./ExaHyPE
  output-directory           = ./ApplicationExamples/EulerFlow_Godunov
  architecture               = noarch

  computational-domain
    dimension                = 2
    width                    = 1.0, 1.0
    offset                   = 0.0, 0.0
    end-time                 = 1.0
  end computational-domain
 
  solver Finite-Volumes MyEulerSolver
    variables         =     rho:1,   v:3,      E:1
    parameters        = 0
    patch-size        = 10
    maximum-mesh-size = 5e-2
    time-stepping     = global
    kernel            = generic::Godunov
    language          = C
    plot vtk::Cartesian::cells::ascii ConservedWriter
      variables = 5
      time      = 0.0
      repeat    = 0.5E-1
      output    = ./conserved
      select    = {}
    end plot
  end solver
end exahype-project
