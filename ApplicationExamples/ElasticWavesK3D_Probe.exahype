/**
 * This file is part of the ExaHyPE project.
 * Copyright (c) 2016  http://exahype.eu
 * All rights reserved.
 *
 * The project has received funding from the European Union's Horizon 
 * 2020 research and innovation programme under grant agreement
 * No 671698. For copyrights and licensing, please consult the webpage.
 *
 * Released under the BSD 3 Open Source License.
 * For the full license text, see LICENSE.txt
 **/
 
/**

  Elastic Waves

 A simple project. (well, it was simple, in the beginning).

 */
exahype-project  ElasticWave

  peano-kernel-path const = ./Peano
  exahype-path const      = ./ExaHyPE
  output-directory const  = ./ApplicationExamples/ElasticWavesK3D_Probe
  architecture const      = noarch
  log-file                = mylogfile.log

  computational-domain
    dimension const          = 3
    width                    = 10.0, 10.0, 10.0
    offset                   = 0.0, 0.0, 0.0
    end-time                 = 4.0
  end computational-domain

  /*shared-memory
    identifier               = dummy
    cores                    = 1
    properties-file          = sharedmemory.properties
  end shared-memory*/

  /*distributed-memory
    identifier               = static_load_balancing
    configure                = {hotspot,fair,ranks_per_node:4}
    buffer-size              = 64
    timeout                  = 60
  end distributed-memory*/

  optimisation
    fuse-algorithmic-steps          = off
    fuse-algorithmic-steps-factor   = 0.99
    /* 0.0 und 0.8 sind schon mal zwei Faktoren */
    timestep-batch-factor           = 0.0
    skip-reduction-in-batched-time-steps = on
    disable-amr-if-grid-has-been-stationary-in-previous-iteration = off
    double-compression = 0.0
    spawn-double-compression-as-background-thread = off
  end optimisation

  solver ADER-DG MyElasticWaveSolver
    variables  const  = v:3,s:6
    parameters const  = rho:1,cs:1,cp:1
    order const       = 3
    /* 27 points: 0.05, 9 points: 0.15 */
    maximum-mesh-size = 1.5
    time-stepping     = globalfixed
    kernel const      = generic::fluxes::linear
    language const    = C

    plot vtk::Cartesian::vertices::ascii ConservedQuantitiesWriter
      variables const = 3
      time            = 0.0
      repeat          = 0.05
      output          = ./conserved
    end plot

    /* this is the fake plotter used to compute global integrals */
    /* it has no output fields. */
    /*plot vtk::Cartesian::vertices::ascii ComputeGlobalIntegrals
      variables const = 0
      time            = 0.0
      repeat          = 0.05
      output          = ./output/these-files-should-not-be-there
    end plot*/

    /*plot vtk::Cartesian::vertices::ascii PrimitivesWriter
      variables const = 5
      time            = 0.0
      repeat          = 0.05
      output          = ./primitive
    end plot*/

    /*plot vtk::Cartesian::vertices::ascii ExactPrimitivesWriter
      variables const = 5
      time            = 0.0
      repeat          = 0.05
      output          = ./exact-primitive
    end plot*/

    /* Do not need the time series for a point in the moment*/
      plot probe::ascii ProbeWriter
      variables const = 3
      time            = 0.0
      repeat          = 0.01
      output          = ./seismogram
      select          = x:6.0,y:5.0,z:5.0
    end plot
   
  end solver
end exahype-project
