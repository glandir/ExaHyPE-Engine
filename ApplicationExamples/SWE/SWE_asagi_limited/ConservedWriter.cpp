// This file was generated by the ExaHyPE toolkit.
// It will not be overwritten.
//
//
// ========================
//   www.exahype.eu
// ========================
#include "ConservedWriter.h"


SWE::ConservedWriter::ConservedWriter(exahype::solvers::LimitingADERDGSolver&  solver) {
  // @TODO Please insert your code here.
}

SWE::ConservedWriter::~ConservedWriter() {
}

void SWE::ConservedWriter::startPlotting( double time) {
  // @TODO Please insert your code here.
}


void SWE::ConservedWriter::finishPlotting() {
  // @TODO Please insert your code here.
}

void SWE::ConservedWriter::mapQuantities(
    const tarch::la::Vector<DIMENSIONS, double>& offsetOfPatch,
    const tarch::la::Vector<DIMENSIONS, double>& sizeOfPatch,
    const tarch::la::Vector<DIMENSIONS, double>& x,
    const tarch::la::Vector<DIMENSIONS, int>&    pos,
    double* Q,
    double* outputQuantities,
    double timeStamp
) {
  const int writtenUnknowns = 6;
  for (int i=0; i<writtenUnknowns-2; i++){ 
    outputQuantities[i] = Q[i];
  }

  outputQuantities[4] = Q[3] + Q[0];

  if(Q[3] > 0.0){
    outputQuantities[5] = 0.0;
  }else{
    outputQuantities[5] = outputQuantities[4];
  }

}
