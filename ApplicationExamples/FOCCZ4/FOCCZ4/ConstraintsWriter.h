// This file is generated by the ExaHyPE toolkit.
// Please do not modify - it will be overwritten by the next
// ExaHyPE toolkit call.
// 
// ========================
//   www.exahype.eu
// ========================
#include "exahype/plotters/Plotter.h"
#include "exahype/solvers/LimitingADERDGSolver.h"
#include "AbstractFOCCZ4Solver_ADERDG.h"


namespace FOCCZ4{
  class ConstraintsWriter;
  
  /**
   * Forward declaration
   */
  class FOCCZ4Solver_ADERDG;
  class FOCCZ4Solver_FV;
}




class FOCCZ4::ConstraintsWriter: public exahype::plotters::Plotter::UserOnTheFlyPostProcessing{
  double timeLastWarned;
    public:
  static constexpr int numberOfVariables = FOCCZ4::AbstractFOCCZ4Solver_ADERDG::NumberOfVariables;
  static constexpr int order = FOCCZ4::AbstractFOCCZ4Solver_ADERDG::Order;
  static constexpr int basisSize = order + 1;
  static constexpr int basisSize3 = basisSize*basisSize*basisSize;

  public:
  ConstraintsWriter(FOCCZ4Solver_ADERDG&  solver);
  ConstraintsWriter(FOCCZ4Solver_FV&  solver);
  ConstraintsWriter(exahype::solvers::LimitingADERDGSolver&  solver);
  virtual ~ConstraintsWriter();
  void startPlotting(double time) override;
  void finishPlotting() override;
  void mapQuantities(
    const tarch::la::Vector<DIMENSIONS, double>& offsetOfPatch,
    const tarch::la::Vector<DIMENSIONS, double>& sizeOfPatch,
    const tarch::la::Vector<DIMENSIONS, double>& x,
    const tarch::la::Vector<DIMENSIONS, int>&    pos,
    double* Q, double* gradQ,
    double* outputQuantities,
    double timeStamp) override;
    
    
   void mapQuantities(
        const tarch::la::Vector<DIMENSIONS, double>& offsetOfPatch,
        const tarch::la::Vector<DIMENSIONS, double>& sizeOfPatch,
        const tarch::la::Vector<DIMENSIONS, double>& x,
        const tarch::la::Vector<DIMENSIONS, int>&    pos,
        double* Q,
        double* outputQuantities,
        double timeStamp) override;
	
  bool mapWithDerivatives() override;
};
