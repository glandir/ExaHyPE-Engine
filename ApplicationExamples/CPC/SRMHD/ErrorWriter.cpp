// This file was generated by the ExaHyPE toolkit.
// It will not be overwritten.
//
//
// ========================
//   www.exahype.eu
// ========================
#include "ErrorWriter.h"
#include "InitialDataAdapter.h"


MHD::ErrorWriter::ErrorWriter(MHD::MHDSolver& solver) {
  // @TODO Please insert your code here.
}

MHD::ErrorWriter::~ErrorWriter() {
}

void MHD::ErrorWriter::startPlotting( double time) {
  // @TODO Please insert your code here.
}


void MHD::ErrorWriter::finishPlotting() {
  // @TODO Please insert your code here.
}

void MHD::ErrorWriter::mapQuantities(
    const tarch::la::Vector<DIMENSIONS, double>& offsetOfPatch,
    const tarch::la::Vector<DIMENSIONS, double>& sizeOfPatch,
    const tarch::la::Vector<DIMENSIONS, double>& x,
    const tarch::la::Vector<DIMENSIONS, int>&    pos,
    double* Q,
    double* outputQuantities,
    double timeStamp
) {
  const int writtenUnknowns = 9;
  const int nDim = DIMENSIONS;

  const double *xpos = x.data();
  double exRes[writtenUnknowns];
  alfenwave_(xpos, exRes, &timeStamp);
  for(int i = 0; i< writtenUnknowns; i++){
      outputQuantities[i] = abs(exRes[i] - Q[i]);
  }
}
