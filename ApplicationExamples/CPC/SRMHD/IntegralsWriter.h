// This file was generated by the ExaHyPE toolkit.
// It will not be overwritten.
//
// ========================
//   www.exahype.eu
// ========================
#ifndef POSTPROCESSING_IntegralsWriter_CLASS_HEADER_
#define POSTPROCESSING_IntegralsWriter_CLASS_HEADER_

#include "exahype/plotters/Plotter.h"

namespace MHD {
  class MHDSolver;
  class IntegralsWriter;
}

#include "exahype/plotters/ascii/TimeSeriesReductions.h"
#include "exahype/plotters/ascii/MultipleReductionsWriter.h"
#include "exahype/plotters/ascii/ReductionsWriter.h"
#include "AbstractMHDSolver.h"

class MHD::IntegralsWriter : public exahype::plotters::Plotter::UserOnTheFlyPostProcessing {
public:
  static const int nVar = MHD::AbstractMHDSolver::NumberOfVariables;
  exahype::plotters::ascii::MultipleReductionsWriter conserved;
  exahype::plotters::ascii::MultipleReductionsWriter primitives;
  exahype::plotters::ascii::MultipleReductionsWriter errors;
  exahype::plotters::ascii::ReductionsWriter statistics;

  IntegralsWriter(MHD::MHDSolver& solver);
  virtual ~IntegralsWriter();

  void startPlotting(double time) override;
  void finishPlotting() override;
  void mapQuantities(
    const tarch::la::Vector<DIMENSIONS, double>& offsetOfPatch,
    const tarch::la::Vector<DIMENSIONS, double>& sizeOfPatch,
    const tarch::la::Vector<DIMENSIONS, double>& x,
    const tarch::la::Vector<DIMENSIONS, int>&    pos,
    double* Q,
    double* outputQuantities,
    double timeStamp) override;
};

#endif /* POSTPROCESSING_IntegralsWriter_CLASS_HEADER_ */
