{# /**
 * This file is part of the ExaHyPE project.
 * Copyright (c) 2016  http://exahype.eu
 * All rights reserved.
 *
 * The project has received funding from the European Union's Horizon
 * 2020 research and innovation programme under grant agreement
 * No 671698. For copyrights and licensing, please consult the webpage.
 *
 * Released under the BSD 3 Open Source License.
 * For the full license text, see LICENSE.txt
 **/ #}
 
namespace kernels {
  namespace aderdg {
    namespace optimised {

      inline int getNumberOfVariable()        {return  {{nVar}};}
      inline int getNumberOfVariablePadded()  {return  {{nVarPad}};}
      
      inline int getBasisSize()               {return  {{nDof}};}
      inline int getBasisSizePadded()         {return  {{nDofPad}};}
      
      inline int getDimension()               {return  {{nDim}};}
	  
      inline bool isLinear()                  {return {{isLinearCText}};}

{% if isLinear %}  
      //TODO JMG initialize correct size for linear case
{% else %}
      inline int getTempSpaceTimeUnknownsSize()     {return {{nVarPad*(nDof**(nDim+1))}};} // == lQh size
      inline int getTempSpaceTimeFluxUnknownsSize() {return {{nVarPad*(nDof**(nDim+1))*(nDim+1)}};} // == lFh size
{% endif %}
      inline int getTempUnknownsSize()              {return {{nVarPad*(nDof**nDim)}};}  // == lQhi size
      inline int getTempFluxUnknownsSize()          {return {{nVarPad*(nDof**nDim)*(nDim+1)}};} // == lFhi size
    }
  }
}

