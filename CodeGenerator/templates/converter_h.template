{# /**
 * This file is part of the ExaHyPE project.
 * Copyright (c) 2016  http://exahype.eu
 * All rights reserved.
 *
 * The project has received funding from the European Union's Horizon
 * 2020 research and innovation programme under grant agreement
 * No 671698. For copyrights and licensing, please consult the webpage.
 *
 * Released under the BSD 3 Open Source License.
 * For the full license text, see LICENSE.txt
 **/ #}

#ifndef EXAHYPE_KERNELS_OPTIMISED_CONVERTER_H_
#define EXAHYPE_KERNELS_OPTIMISED_CONVERTER_H_
#include <cstring>

#include "kernels/KernelUtils.h"

namespace kernels {
namespace aderdg {
namespace optimised {
namespace converter {

inline int getBndGenArraySize() {
  return {{2 * nDim * (nDof ** (nDim-1)) * nVar}};
}

inline int getBndOptArraySize() {
  return {{2 * nDim * bndBlockSize * nVar}};
}

inline int getFhiGenArraySize() {
  return {{(nDof ** nDim) * nVar * (nDim+1)}};
}

inline int getFhiOptArraySize() {
  return {{(nDof ** nDim) * nVarPad * (nDim+1)}};
}

inline int getQhiGenArraySize() {
  return {{(nDof ** nDim) * nVar}};
}

inline int getQhiOptArraySize() {
  return {{(nDof ** nDim) * nVarPad}};
}

void Bnd_optimised2generic(const double* const opt, double* gen);
void Bnd_generic2optimised(const double* const gen, double* opt);

void Fhi_optimised2generic(const double* const opt, double* gen);
void Fhi_generic2optimised(const double* const gen, double* opt);

void Qhi_optimised2generic(const double* const opt, double* gen);
void Qhi_generic2optimised(const double* const gen, double* opt);

}
}
}
}

#endif //EXAHYPE_KERNELS_OPTIMISED_CONVERTER_H_

