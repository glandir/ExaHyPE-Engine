{# /**
  This subtemplate contain macros used in other template/subtemplate
  
  Include it at the start of a template to be able to use the macros
  {% import 'subtemplates/macros.template' as m with context %}
  
  To use macros with indentation use {{ m.XXmacr(XXargs...) | indent(XXsize) }}
  and put a jinja comment afterward otherwise you'll get a whitespace after the 
  macro call (known jinja2 issue, https://github.com/pallets/jinja/issues/612)
  */
#}
{#
/**
  Allocate array
*/
#}
{% macro allocateArray(name, size, setToZero=False) %}
{% if tempVarsOnStack %}
double {{name}}[{{size}}] __attribute__((aligned(ALIGNMENT)));
{% else %}
double* {{name}} = ((double *) _mm_malloc(sizeof(double)*{{size}}, ALIGNMENT));
{% endif %}
{% if setToZero %}
std::memset({{name}}, 0, sizeof(double)*{{size}});
{% endif %}
{% endmacro %} {##}
{#

/**
  Free array
*/
#}
{% macro freeArray(name) %}
{% if not tempVarsOnStack %}
_mm_free({{name}});
{% endif %}
{% endmacro %}
{#

/**
  Matmul, see the subtemplate
      C       = alpha  *   A   *    B   + beta  *  C
   (M x N)              (M x K)  (K x N)
  The gemm config (fetched through matmulKey) contains M, N, K, LDA, LDB, LDC, alpha and beta
*/
#}
{% macro matmul(matmulKey, A, B, C, A_shift, B_shift, C_shift, overrideUseLibxsmm="BoolNotDefined", trueAlpha="", trueB="", forceCoeffMatrix=False) %}
{% include "subtemplates/matmul.template" %}
{% endmacro %}