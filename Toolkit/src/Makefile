# This is a makefile for Peano's StorageSchemes component
# generated by the Peano Development Tools (PDT) 

# Include files
-include files.mk


OBJECTS=$(SOURCES:.java=.class)


default: 
	@echo ExaHyPE toolkit makefile
	@echo ------------------------
	@echo 
	@echo Supported targets then are
	@echo   clean
	@echo   createParser
	@echo   compile
	@echo   dist
	@echo   all


clean:
	rm -f $(OBJECTS)
	rm -f files.mk
	rm -f ../dist/ExaHyPE.jar
	rm -rf eu/exahype/node

#	delete unpacked dependencies.
	rm -rf org/jtwig
	rm -rf com/github/


createParser:
	java -jar ../lib/sablecc.jar -d . ../exahype.grammar 
	rm -f files.mk


compile: files.mk $(OBJECTS) 

unpack_deps:
#	Ugly trick to get the depencies in the same directory.
#	They only contain .class files, so nothing to compile, needs only
# 	to be present during compiling eu/exahype/.
#
#	jar xf ../lib/jtwig-core.jar org/jtwig
#	jar xf ../lib/mustache.jar   com/github/mustachejava
#	jar xf ../lib/handlebars.jar com/github/jknack

jar:
	jar cmf ./Manifest.txt ExaHyPE.jar .

dist:
	jar cmf ./Manifest.txt ExaHyPE.jar .
	mv ExaHyPE.jar ../dist
	tar -czf ../dist/ExaHyPE-toolkit.tar.gz --exclude=*.class Manifest.txt Makefile eu 


all:
#	try serial making by invoking individual make instead of dependency list:
	make clean
	make createParser
	make unpack_deps
	make compile
	make dist


files.mk:	
	@touch files.mk
	@echo "SOURCES=\\" > files.mk
	find . -name '*.java' | tr '\n' ' ' >> files.mk



$(OBJECTS): %.class : %.java
	javac -sourcepath . $<  


