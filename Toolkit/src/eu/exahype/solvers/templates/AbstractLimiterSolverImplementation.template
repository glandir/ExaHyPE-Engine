// This file is generated by the ExaHyPE toolkit.
// Please do not modify - it will be overwritten by the next
// ExaHyPE toolkit call.
// 
// ========================
//   www.exahype.eu
// ========================
// ==============================================
// Please do not change the implementations below
// =============================---==============
#include "{{abstractSolver}}.h"

#include "kernels/limiter/generic/Limiter.h"


// Just call parent constructor
{{project}}::{{abstractSolver}}::{{abstractSolver}}(std::unique_ptr<exahype::solvers::ADERDGSolver> solver, std::unique_ptr<exahype::solvers::FiniteVolumesSolver> limiter, const double DMPRelaxationParameter, const double DMPDifferenceScaling, const int iterationsToCureTroubledCell):
  exahype::solvers::LimitingADERDGSolver("LimitingADERDG" /* identifier */, std::move(solver), std::move(limiter), DMPRelaxationParameter, DMPDifferenceScaling, iterationsToCureTroubledCell) {
}

