#!/bin/bash
#@ job_type = parallel
#@ class = micro
#@ node = 1
#@ tasks_per_node = 28
#@ island_count = 1
#@ network.MPI = sn_all,not_shared,us 
#@ energy_policy_tag = ExaHyPE_Euler_ADERDG_energy_tag
#@ minimize_time_to_solution = yes
#@ wall_clock_limit = 04:00:00
#@ job_name = ExaHyPE-Euler_ADERDG
#@ notification=complete
#@ notify_user=dominic.e.charrier@durham.ac.uk
#@ error =  $(job_name).$(jobid).err
#@ queue
. /etc/profile
. /etc/profile.d/modules.sh
module load gcc/4.9
module load tbb

export OMP_NUM_THREADS=28
export MP_TASK_AFFINITY=core:28

nodes=1
tasks=1
tasksPerNode=1
coresPerTask=28
let procsPerNode=tasksPerNode*coresPerTask

compiler=Intel
sharedMem=TBB

prefix=Euler_ADERDG-no-output-regular-0-p3
out=convergence/results/$prefix-$sharedMem-$compiler-n$nodes-t$tasksPerNode-c$coresPerTask.out

script=convergence/supermuc.load-leveler
spec=convergence/$prefix-t$tasksPerNode-c$coresPerTask.exahype

# pipe some information into output files
echo "Timestamp (YYYY/MM/dd:hh:mm:ss): `date +%Y/%m/%d:%H:%M:%S`" >$out
module list 2>$out
echo "" >> $out
cat $script >>$out
echo "" >> $out
cat $spec >> $out

# execute the job
./ExaHyPE-Euler-p3-$sharedMem-$compiler $spec >> $out