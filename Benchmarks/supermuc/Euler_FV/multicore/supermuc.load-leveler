#!/bin/bash
#@ job_type = parallel
#@ class = micro
#@ node = 1
#@ tasks_per_node = 28
#@ island_count = 1
#@ network.MPI = sn_all,not_shared,us 
#@ energy_policy_tag = ExaHyPE_Euler_FV_energy_tag
#@ minimize_time_to_solution = yes
#@ wall_clock_limit = 04:00:00
#@ job_name = ExaHyPE-Euler_FV
#@ notification=complete
#@ notify_user=dominic.e.charrier@durham.ac.uk
#@ error =  $(job_name).$(jobid).err
#@ queue
. /etc/profile
. /etc/profile.d/modules.sh
module load gcc/4.9
module load tbb
module load likwid

nodes=1
tasksPerNode=1
coresPerTask=1
let procsPerNode=tasksPerNode*coresPerTask

export MP_SINGLE_THREAD=no
export OMP_NUM_THREADS=$coresPerTask
export MP_TASK_AFFINITY=core:$coresPerTask

compiler=Intel
sharedMem=TBB
if (( coresPerTask==1 )); then
  sharedMem=None
fi

prefix=Euler_FV-no-output-regular-0-p3
out=multicore/results/$prefix-$sharedMem-$compiler-n$nodes-t$tasksPerNode-c$coresPerTask.out

script=multicore/hamilton.slurm-script
spec=multicore/$prefix-t$tasksPerNode-c$coresPerTask.exahype

# pipe some information into output files
echo "Timestamp (YYYY/MM/dd:hh:mm:ss): `date +%Y/%m/%d:%H:%M:%S`" >$out
module list 2>$out
echo "" >> $out
cat $script >>$out
echo "" >> $out
cat $spec >> $out
cat $out > ${out}.likwid

# execute the job
./ExaHyPE-Euler-p3-$sharedMem-$compiler $spec >> $out

if (( $coresPerTask==1 )); then
  likwid-perfctr -f -C 0 -g MEM       ./ExaHyPE-Euler-p3-$sharedMem-$compiler $spec >> ${out}.likwid
  likwid-perfctr -f -C 0 -g FLOPS_AVX ./ExaHyPE-Euler-p3-$sharedMem-$compiler $spec >> ${out}.likwid
  likwid-perfctr -f -C 0 -g L2CACHE   ./ExaHyPE-Euler-p3-$sharedMem-$compiler $spec >> ${out}.likwid
  likwid-perfctr -f -C 0 -g BRANCH    ./ExaHyPE-Euler-p3-$sharedMem-$compiler $spec >> ${out}.likwid
else
  let maxCore=coresPerTask-1

  likwid-perfctr -f -C 0-$maxCore -g MEM       ./ExaHyPE-Euler-p3-$sharedMem-$compiler $spec >> ${out}.likwid
  likwid-perfctr -f -C 0-$maxCore -g FLOPS_AVX ./ExaHyPE-Euler-p3-$sharedMem-$compiler $spec >> ${out}.likwid
  likwid-perfctr -f -C 0-$maxCore -g L2CACHE   ./ExaHyPE-Euler-p3-$sharedMem-$compiler $spec >> ${out}.likwid
  likwid-perfctr -f -C 0-$maxCore -g BRANCH    ./ExaHyPE-Euler-p3-$sharedMem-$compiler $spec >> ${out}.likwid
fi