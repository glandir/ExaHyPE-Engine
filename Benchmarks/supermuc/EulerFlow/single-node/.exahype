/**
 * This file is part of the ExaHyPE project.
 * Copyright (c) 2016  http://exahype.eu
 * All rights reserved.
 *
 * The project has received funding from the European Union's Horizon 
 * 2020 research and innovation programme under grant agreement
 * No 671698. For copyrights and licensing, please consult the webpage.
 *
 * Released under the BSD 3 Open Source License.
 * For the full license text, see LICENSE.txt
 **/
 
/**

 Euler Flow

 A simple project. (well, it was simple, in the beginning).

 */
exahype-project  Euler

  peano-kernel-path const = ./Peano
  exahype-path const      = ./ExaHyPE
  output-directory const  = ./ApplicationExamples/EulerFlow
  architecture const      = noarch
  log-file                = mylogfile.log

  computational-domain
    dimension const          = 3
    width                    = 1.0, 1.0, 1.0
    offset                   = 0.0, 0.0, 0.0
    end-time                 = '0.01'
  end computational-domain

  shared-memory
    identifier               = dummy
    cores                    = 1
    properties-file          = sharedmemory.properties
  end shared-memory

  distributed-memory
    identifier               = static_load_balancing
    configure                = {hotspot,fair,ranks_per_node:28}
    buffer-size              = 64
    timeout                  = 60
  end distributed-memory

  optimisation
    fuse-algorithmic-steps          = on
    fuse-algorithmic-steps-factor   = 0.99
    /* 0.0 und 0.8 sind schon mal zwei Faktoren */
    timestep-batch-factor           = 0.0
    skip-reduction-in-batched-time-steps = off
    disable-amr-if-grid-has-been-stationary-in-previous-iteration = off
    double-compression = 0.0
    spawn-double-compression-as-background-thread = off
  end optimisation

  solver ADER-DG MyEulerSolver
    variables const   = rho:1,j:3,E:1
    order const       = 3
    /* 27 points: 0.05, 9 points: 0.15 */
    maximum-mesh-size = '0.05'
    time-stepping     = global
    kernel const      = generic::fluxes::nonlinear
    language const    = C
  end solver
end exahype-project
