/* 
 * This file is part of the ExaHyPE project.
 * Copyright (c) 2016  http://exahype.eu
 * All rights reserved.
 *
 * The project has received funding from the European Union's Horizon 
 * 2020 research and innovation programme under grant agreement
 * No 671698. For copyrights and licensing, please consult the webpage.
 *
 * Released under the BSD 3 Open Source License.
 * For the full license text, see LICENSE.txt
 */
exahype-project Euler
  peano-kernel-path const          = ./Peano
  exahype-path const               = ./ExaHyPE
  output-directory const           = ./Benchmarks/supermuc/Euler

  computational-domain
    dimension const         = 3
    width                   = 1.0, 1.0, 1.0
    offset                  = 0.0, 0.0, 0.0
    end-time                = 0.1
  end computational-domain
  
  shared-memory
    identifier               = dummy
    cores                    = 4
    properties-file          = sharedmemory.properties
  end shared-memory  
  
  optimisation
    fuse-algorithmic-steps          = on
    fuse-algorithmic-steps-factor   = 0.99
    /* 0.0 und 0.8 sind schon mal zwei Faktoren */
    timestep-batch-factor           = 0.8
    skip-reduction-in-batched-time-steps = on
    disable-amr-if-grid-has-been-stationary-in-previous-iteration = off
    double-compression = 0.0
    spawn-double-compression-as-background-thread = off
  end optimisation
 
  solver Limiting-ADER-DG EulerSolver
    variables const          = rho:1,j:3,E:1
    order const              = 3
    maximum-mesh-size        = 0.079
    maximum-mesh-depth       = 0
    time-stepping            = global
    kernel const             = generic::fluxes::nonlinear
    language const           = C
    limiter-kernel const     = generic::musclhancock
    limiter-language const   = C
    dmp-observables          = 5
    dmp-relaxation-parameter = 1e-2
    dmp-difference-scaling   = 1e-3
    steps-till-cured         = 0
    // reference either: sod,entropywave,explosion,rarefactionwave. suppressvely either: on,off
    constants                = reference:explosion


    plot user::defined ErrorWriter
      variables const = 5
      time            = 0.0
      repeat          = 1e-2
      output          = not-available
    end plot
    
    plot vtk::Cartesian::vertices::limited::ascii ErrorPlotter
      // absErrorL1perCell[nvar],Q[nvar],QAnalytical[nvar]
      variables const = 15 
      time            = 0.0
      repeat          = 1e-2
      output          = ./errors
    end plot
    
    plot vtk::Cartesian::subcells::limited::ascii SubcellsPlotter
      variables const = 5
      time      = 0.0
      repeat    = 1e-2
      output    = ./fv
    end plot
    
  end solver
end exahype-project
