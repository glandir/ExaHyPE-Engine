#!/bin/bash
#SBATCH --job-name="ExaHyPE"
#SBATCH -o ExaHyPE-EulerFlow.%A.out
#SBATCH -e ExaHyPE-EulerFlow.%A.err
#SBATCH -t 01:00:00
#SBATCH --exclusive
#SBATCH --cluster=mpp3
#SBATCH --partition=mpp3_batch
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=1
#SBATCH --cpus-per-task=28
#SBATCH --mail-user=dominic.e.charrier@durham.ac.uk
#SBATCH --mail-type=ALL
#SBATCH --array=1,2,4,8,14,28

source /etc/profile.d/modules.sh


module load tbb/2017
module load likwid/4.0

nodes=1
tasks=1
tasksPerNode=1
coresPerTask=$SLURM_ARRAY_TASK_ID
let procsPerNode=tasksPerNode*coresPerTask

compiler=Intel
sharedMem=TBB

prefix=Euler_ADERDG-no-output-regular-0-p3
out=multicore/results/$prefix-$sharedMem-$compiler-n$nodes-t$tasksPerNode-c$coresPerTask.out

script=multicore/hamilton.slurm-script
spec=multicore/$prefix-t$tasksPerNode-c$coresPerTask.exahype

# pipe some information into output files
echo "Timestamp (YYYY/MM/dd:hh:mm:ss): `date +%Y/%m/%d:%H:%M:%S`" >$out
module list 2>>$out
echo "" >> $out
cat $script >>$out
echo "" >> $out
cat $spec >> $out
cat $out > ${out}.likwid

# execute the job
./ExaHyPE-Euler-p3-$sharedMem-$compiler $spec >> $out

#if (( coresPerTask==1 )); then
#  likwid-perfctr -f -C 0 -g MEM      ./ExaHyPE-Euler-p3-$sharedMem-$compiler $spec >> ${out}.likwid
#  likwid-perfctr -f -C 0 -g FLOPS_DP ./ExaHyPE-Euler-p3-$sharedMem-$compiler $spec >> ${out}.likwid
#  likwid-perfctr -f -C 0 -g L2CACHE  ./ExaHyPE-Euler-p3-$sharedMem-$compiler $spec >> ${out}.likwid
#  likwid-perfctr -f -C 0 -g L3CACHE  ./ExaHyPE-Euler-p3-$sharedMem-$compiler $spec >> ${out}.likwid
#  likwid-perfctr -f -C 0 -g L3       ./ExaHyPE-Euler-p3-$sharedMem-$compiler $spec >> ${out}.likwid
#  likwid-perfctr -f -C 0 -g BRANCH   ./ExaHyPE-Euler-p3-$sharedMem-$compiler $spec >> ${out}.likwid
  # not available on ham7: likwid-perfctr -C 0 -g L1CACHE  ./ExaHyPE-Euler-p3-$sharedMem-$compiler $spec >> $out
#else
#  let maxCore=coresPerTask-1

#  likwid-perfctr -f -C 0-$maxCore -g MEM      ./ExaHyPE-Euler-p3-$sharedMem-$compiler $spec >> ${out}.likwid
#  likwid-perfctr -f -C 0-$maxCore -g FLOPS_DP ./ExaHyPE-Euler-p3-$sharedMem-$compiler $spec >> ${out}.likwid
#  likwid-perfctr -f -C 0-$maxCore -g L2CACHE  ./ExaHyPE-Euler-p3-$sharedMem-$compiler $spec >> ${out}.likwid
#  likwid-perfctr -f -C 0-$maxCore -g L3CACHE  ./ExaHyPE-Euler-p3-$sharedMem-$compiler $spec >> ${out}.likwid
#  likwid-perfctr -f -C 0-$maxCore -g L3       ./ExaHyPE-Euler-p3-$sharedMem-$compiler $spec >> ${out}.likwid
#  likwid-perfctr -f -C 0-$maxCore -g BRANCH   ./ExaHyPE-Euler-p3-$sharedMem-$compiler $spec >> ${out}.likwid
  # not available on ham7: likwid-perfctr -C 0-$maxCore -g L1CACHE  ./ExaHyPE-Euler-p3-$sharedMem-$compiler $spec >> $out
#fi
