# This is a makefile for Peano's AdvectionDG0 component
# generated by the Peano Development Tools (PDT) 

# Include files
-include files.mk


# Set Paths
# ---------
# Please adopt these directories to your Peano installation. The values are 
# used by the compiler and linker calls.
PEANO_HOME = .

# points to directory holding the project's sources
PROJECT_HOME = EulerFlow3d  

# name of the executable
EXECUTABLE=peano-EulerFlow3d

# Set Dimension
# -------------
DIM=-DDim2
#DIM=-DDim3
#DIM=-DDim4



# Configure System
# ----------------
# These values are used to assemble the symbols SYSTEM_CFLAGS and SYSTEM_LFLAGS.
INCLUDE_TBB=$(TBB_INC)
#INCLUDE_OMP=$(OMP_INC)
INCLUDE_OMP=-fopenmp
INCLUDE_MPI=$(MPI_INC)


LINK_TBB=$(TBB_SHLIB)
#LINK_OMP=$(OMP_SHLIB)
LINK_OMP=-fopenmp
#LINK_MPI=-lpthread -lrt -lmpich
LINK_MPI=



# Decide on compiler and flags depending on the environment variables [CC]={gcc, Intel} and [MODE]={Debug, Profile, Release}
# -----------------------
ifeq ($(CC),gcc)
	ifeq ($(MODE),Debug)
		# Settings for the GNU Compiler (Debug Mode)
		# ------------------------------------------
		CC=g++
		COMPILER_CFLAGS=-DDebug -DAsserts -O0 -pedantic -pedantic-errors -Wall -Wstrict-aliasing -fstrict-aliasing -ggdb -std=c++0x
		COMPILER_LFLAGS=
	else ifeq ($(MODE),Profile)
		# Settings for the GNU Compiler (Profile Mode)
		# --------------------------------------------
		CC=g++
		COMPILER_CFLAGS=-DPerformanceAnalysis -p -pg -O3 -fstrict-aliasing -fno-rtti -fno-exceptions -std=c++0x
		COMPILER_LFLAGS=-p -pg
	else
		# Settings for the GNU Compiler (Release Mode)
		# --------------------------------------------
		CC=g++
		COMPILER_CFLAGS=-O3 -fstrict-aliasing -fno-rtti -fno-exceptions -std=c++0x
		COMPILER_LFLAGS=
	endif
else
        ifeq ($(MODE),Debug)
		# Settings for the Intel Compiler (Debug Mode)
		# --------------------------------------------
		CC=icpc
		COMPILER_CFLAGS=-DDebug -DAsserts -O0 -fstrict-aliasing -std=c++0x
		COMPILER_LFLAGS=
	else ifeq ($(MODE),Profile)
		# Settings for the GNU Compiler (Profile Mode)
		# --------------------------------------------
		CC=icpc
		COMPILER_CFLAGS=-DPerformanceAnalysis -p -pg -fast -fstrict-aliasing -DMPICH_IGNORE_CXX_SEEK -fast -fno-rtti -no-ipo -ip -xSSE4.2 -std=c++0x
		COMPILER_LFLAGS=-p -pg
        else
		# Settings for the Intel Compiler (Release Mode)
		# ----------------------------------------------
		CC=icpc
		COMPILER_CFLAGS=-fast -fstrict-aliasing  -DMPICH_IGNORE_CXX_SEEK -fast -fno-rtti -no-ipo -ip -xSSE4.2 -std=c++0x
		COMPILER_LFLAGS=
	endif
endif



# Assemble Compiler Flags depending on the environment variable [SHAREDMEM]={OMP, TBB}
# -----------------------
ifeq ($(SHAREDMEM),OMP)
        SYSTEM_CFLAGS = $(INCLUDE_OMP) 
        SYSTEM_LFLAGS = $(LINK_OMP) 
	COMPILER_CFLAGS += -DSharedOMP
else ifeq ($(SHAREDMEM),TBB)
	SYSTEM_CFLAGS = $(INCLUDE_TBB)
	SYSTEM_LFLAGS = $(LINK_TBB)
	COMPILER_CFLAGS += -DSharedTBB
else ifeq($(SHAREDMEM),None)
	# do nothing
else
        SYSTEM_CFLAGS = $(INCLUDE_TBB) $(INCLUDE_MPI)
        SYSTEM_LFLAGS = $(LINK_TBB)    $(LINK_MPI)
endif





#
# Linker Settings
# ---------------
# By default, I use the compiler command. But you might wanna modify it.
LL=$(CC)


OBJECTS=$(SOURCES:.cpp=.o)



all: header build



files.mk:
	touch files.mk
	echo -n SOURCES= > files.mk
	find -H $(PEANO_HOME)/peano -name '*.cpp' | awk '{ printf "%s ", $$0 }' >> files.mk
	find -H $(PEANO_HOME)/tarch -name '*.cpp' | awk '{ printf "%s ", $$0 }' >> files.mk
	find $(PROJECT_HOME) -name '*.cpp' | awk '{ printf "%s ", $$0 }' >> files.mk
	# if you encouter problems with awk, use the following snippets (through they
	# do in turn not work with all bash versions. In particular not with MACs:
	#
	# find $(PROJECT_HOME) -name '*.cpp' -printf '%p ' >> files.mk



header:
	@echo  --- This is ExaHyPE @ Peano 3 ---


build: files.mk $(OBJECTS)
	$(LL) $(OBJECTS) -o $(EXECUTABLE) $(COMPILER_LFLAGS) $(SYSTEM_LFLAGS) 
	@echo
	@echo build of Peano with component EulerFlow3d successful
	@echo visit Peano\'s homepage at http://www.peano-framework.org


clean:
	rm -f $(EXECUTABLE)
	rm -f $(OBJECTS)
	rm -f files.mk


$(OBJECTS): %.o : %.cpp
	$(CC) $(DIM) $(COMPILER_CFLAGS) $(SYSTEM_CFLAGS) -I$(PEANO_HOME) -I. -c $< -o $@
