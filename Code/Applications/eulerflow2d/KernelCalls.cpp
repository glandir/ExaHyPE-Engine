// This file is generated by the ExaHyPE toolkit.
// Please do not modify - it will be overwritten by the next
// ExaHyPE toolkit call.
// 
// ========================
//   www.exahype.eu
// ========================


#include "kernels/KernelCalls.h"


#include "exahype/SolverDescription.h"


void kernels::initSolvers() {
  exahype::SolverDescription::ExistingSolvers.push_back( exahype::SolverDescription("MyEuler2d",0) ); 
}


int kernels::getMinimumTreeDepth() {
  int result = std::numeric_limits<int>::max();
  for (std::vector<exahype::SolverDescription>::const_iterator p=exahype::SolverDescription::ExistingSolvers.begin(); p!=exahype::SolverDescription::ExistingSolvers.end(): p++) 
    result = std::min(result,p->getMinimumTreeDepth()); 
  }
  return result;
}
