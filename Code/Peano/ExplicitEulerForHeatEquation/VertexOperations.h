// This file is part of the Peano project. For conditions of distribution and 
// use, please see the copyright notice at www.peano-framework.org
#ifndef _MYPROJECT_VERTEX_OPERATIONS_H_ 
#define _MYPROJECT_VERTEX_OPERATIONS_H_


#include "ExplicitEulerForHeatEquation/Vertex.h"
#include "peano/grid/Vertex.h"
#include "peano/grid/VertexEnumerator.h"
#include "peano/utils/Globals.h"


namespace myproject { 
      class VertexOperations; 
}


/**
 * This class comprises a collection of static operations on sets of vertices. 
 * It is generated by the Peano Development Toolkit (PDT) and will be 
 * overwritten by every rerun. Thus, do edit neither the class header nor its 
 * implementation. 
 */
class myproject::VertexOperations { 
  private: 
    /**
     * One should not instantiate this class as it is a collection of static operations.
     */
    VertexOperations();
  public:
    static tarch::la::Vector<FOUR_POWER_D,double>  readAllU(const peano::grid::VertexEnumerator& enumerator, const Vertex* const vertices);
    static tarch::la::Vector<FOUR_POWER_D,double>  readAllOldU(const peano::grid::VertexEnumerator& enumerator, const Vertex* const vertices);


    static double  readU(const Vertex& vertex);
    static double  readOldU(const Vertex& vertex);






    static tarch::la::Vector<TWO_POWER_D,double> readU(const peano::grid::VertexEnumerator& enumerator, const Vertex* const vertices);
    static tarch::la::Vector<TWO_POWER_D,double> readOldU(const peano::grid::VertexEnumerator& enumerator, const Vertex* const vertices);







    static void writeAllU(const peano::grid::VertexEnumerator& enumerator, Vertex* const vertices, const tarch::la::Vector<FOUR_POWER_D,double>& values );


    static void writeU(const peano::grid::VertexEnumerator& enumerator, Vertex* const vertices, const tarch::la::Vector<TWO_POWER_D,double>& values );






    static void writeU(Vertex&  vertex,  const double& values );






    


























































};


#endif
