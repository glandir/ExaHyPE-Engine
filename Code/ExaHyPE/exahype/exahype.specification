
component: ExaHyPE

namespace: ::exahype

heap-dastgen-file: ADERDGCellDescription.def
heap-dastgen-file: FiniteVolumesCellDescription.def

vertex:
  dastgen-file: Vertex.def
  read vector2PowD(int): CellDescriptionsIndex
  write vector2PowD(int): CellDescriptionsIndex
  
cell:
  dastgen-file: Cell.def

state:
  dastgen-file: State.def
  
event-mapping:
  name: GlobalTimeStepComputation
  
event-mapping:
  name: SolutionUpdate
  
event-mapping:
  name: InitialCondition

event-mapping: // -DEC: consider to move the computation of boundary extrapolated values out of the space-time predictor mapping
  name: SpaceTimePredictor

event-mapping: 
  name: LoadBalancing

event-mapping:
  name: RiemannSolver
 
event-mapping:
  name: NewTimeStep
 
event-mapping:
  name: Plot

// GridUpdate   
event-mapping:
  name: GridErasing

event-mapping:
  name: RegularMesh

event-mapping:
  name: MarkingForRefinement
  
event-mapping:
  name: Refinement

event-mapping:
  name: MarkingForAugmentation
  
event-mapping:
  name: Augmentation

event-mapping:
  name: DropIncomingMPIMessages
  
event-mapping:
  name: DropIncomingMPIMetadataMessages  
// 

event-mapping:
  name: AugmentedAMRTreePlot2d
  
adapter:
  name: AugmentedAMRGrid
  merge-with-user-defined-mapping: RegularMesh             // (createInner/BoundaryVertex,enterCell,serial)
  // Initial Condition comes after RegularMesh since we refine here in a fast manner down to the 
  // first layer of cells we initialise. Afterwards refinement is done per iteration.
  merge-with-user-defined-mapping: InitialCondition        // (enterCell,runconcurrently);   
  merge-with-user-defined-mapping: MarkingForRefinement    // (enterCell,runconcurrently)
  merge-with-user-defined-mapping: Refinement              // (touchVertexLastTime,enterCell,serial)          
  merge-with-user-defined-mapping: MarkingForAugmentation  // (enterCell,runconcurrently)
  merge-with-user-defined-mapping: Augmentation            // (touchVertexLastTime,enterCell,serial)
  merge-with-user-defined-mapping: LoadBalancing
  merge-with-predefined-mapping:   MultiscaleLinkedCell(CellDescriptionsIndex) // (createInner/BoundaryVertex,enterCell,avoidfinegridraces)       
  
adapter:
  name: PlotAugmentedAMRGrid
  merge-with-user-defined-mapping: AugmentedAMRTreePlot2d 
  merge-with-predefined-mapping: VTKGridVisualiser(grid)

// Adapters for initialisation of time stepping
adapter:
  name: InitialConditionAndGlobalTimeStepComputation
  merge-with-user-defined-mapping: NewTimeStep
  merge-with-user-defined-mapping: DropIncomingMPIMetadataMessages
  merge-with-user-defined-mapping: InitialCondition
  // needs current time step size
  merge-with-user-defined-mapping: GlobalTimeStepComputation

adapter:
  name: PredictorAndPlotAndGlobalTimeStepComputation
  merge-with-user-defined-mapping: NewTimeStep
  // needs current time step size
  merge-with-user-defined-mapping: SpaceTimePredictor // DEC: after predictor we can start the face data exchange
  merge-with-user-defined-mapping: Plot
  merge-with-user-defined-mapping: GlobalTimeStepComputation

adapter:
  name: PredictorAndGlobalTimeStepComputation
  merge-with-user-defined-mapping: NewTimeStep
  // needs current time step size
  merge-with-user-defined-mapping: SpaceTimePredictor // DEC: after predictor we can start the face data exchange
  merge-with-user-defined-mapping: GlobalTimeStepComputation

// Adapters for clean up (to be extended)
adapter:
  name: GridErasing
  merge-with-user-defined-mapping: DropIncomingMPIMessages
  merge-with-user-defined-mapping: GridErasing

// Adapter for 1 phase time stepping
adapter: 
  name: ADERDGTimeStep
  // needs corrector time step size
  merge-with-user-defined-mapping: RiemannSolver     // RiemannSolver must start new time step in touchVertexFirstTime
  merge-with-user-defined-mapping: SolutionUpdate
  // needs predictor time step size
  merge-with-user-defined-mapping: SpaceTimePredictor  // DEC: after predictor we can start the face data exchange
  merge-with-user-defined-mapping: GlobalTimeStepComputation
  merge-with-user-defined-mapping: LoadBalancing
 
 
adapter: 
  name: ADERDGTimeStepAndPlot
  // needs corrector time step size
  merge-with-user-defined-mapping: RiemannSolver     // RiemannSolver must start new time step in touchVertexFirstTime
  merge-with-user-defined-mapping: SolutionUpdate
  merge-with-user-defined-mapping: Plot
  // needs predictor time step size
  merge-with-user-defined-mapping: SpaceTimePredictor  // DEC: after predictor we can start the face data exchange 
  merge-with-user-defined-mapping: GlobalTimeStepComputation
 
/**
 * In a serial version, running the predictor is the same for optimistic time 
 * stepping and the non-fused algorithm. In the MPI case however a rerun in 
 * optimistic time stepping has to remove all old MPI messages from the queues
 * and re-send the updated boundary values, so it is slightly different
 */
adapter:
  name: PredictorRerun
  merge-with-user-defined-mapping: DropIncomingMPIMessages
  merge-with-user-defined-mapping: NewTimeStep
  merge-with-user-defined-mapping: SpaceTimePredictor 
 
// Additional adapters for 4 phase time stepping
adapter: 
  name: RiemannSolver
  merge-with-user-defined-mapping: RiemannSolver

adapter:
  name: Predictor
  merge-with-user-defined-mapping: SpaceTimePredictor 

adapter:
  name: Corrector
  merge-with-user-defined-mapping: SolutionUpdate
  merge-with-user-defined-mapping: GlobalTimeStepComputation
  merge-with-user-defined-mapping: LoadBalancing

adapter:
  name: CorrectorAndPlot
  merge-with-user-defined-mapping: SolutionUpdate
  merge-with-user-defined-mapping: Plot
  merge-with-user-defined-mapping: GlobalTimeStepComputation

adapter:
  name: Plot
  merge-with-user-defined-mapping: Plot
  