#!/bin/sh
# source this file.

# This file contains commands to load before being able
# to compile ExaHyPE on our regional Frankfurt cluster LOEWE,
# https://csc.uni-frankfurt.de/wiki/doku.php?id=public:service:loewe-csc

# Load these modules to compile
# TBB, MPI, C++14 with Intel17:

module load gcc/5.2.0
module load intel/compiler/64/17.0.1
module load unstable
module load openmpi/intel-17.0.1/2.0.1

# Dependencies for some applications:
module load hdf5/intel-17.0.1/1.8.18
export PROJECT_CFLAGS="${PROJECT_CFLAGS} -I${HDF5INCLUDE}"
export PROJECT_LFLAGS="${PROJECT_LFLAGS} ${HDF5DIR}" # TODO: This will not work.

# same for GSL.
# GSL IS NOT AVAILABLE AT LOEWE AS A MODULE!! SHIT.
# So we do need some own dependency managament. As also for TBB, where
# Ubuntu has this faulty implementation.

# This is for the BuildScripts/compile.sh
export MAKE_NPROC=60 # compensate the slow filesystem

export COMPILER="Intel" MODE="Release"  SHAREDMEM="TBB" DISTRIBUTEDMEM="MPI"

# hack to deal with all those misleaded kinds of mpi compilers
# this should be no more neccessary:
#export mpi_workaround_bin="$(mktemp -d)"
#ln -s "$(which mpifort)" $mpi_workaround_bin/mpiifort
#ln -s "$(which mpiCC)"   $mpi_workaround_bin/mpiicc
#ln -s "$(which mpiCC)"   $mpi_workaround_bin/mpiiCC
#export PATH="$mpi_workaround_bin:$PATH"

export EXAHYPE_CC="$(which mpiCC)"
export EXAHYPE_FC="$(which mpifort)"

