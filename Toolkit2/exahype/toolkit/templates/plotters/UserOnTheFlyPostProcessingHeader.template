// This file was generated by the ExaHyPE toolkit.
// It will not be overwritten.
//
// ========================
//   www.exahype.eu
// ========================
{# begin references #}
{%set project=data["project_name"] %}
{%set solverName=data["solver"]["name"] %}
{%set plotterName=data["plotter"]["name"] %}
{%set writtenUnknowns=data["plotter"]["number_of_variables"] %}
{# end references #}
#ifndef POSTPROCESSING_{{plotterName}}_CLASS_HEADER_
#define POSTPROCESSING_{{plotterName}}_CLASS_HEADER_

#include "exahype/plotters/Plotter.h"

namespace {{project}} {
  class {{solverName}};
  class {{plotterName}};
}

class {{project}}::{{plotterName}} : public exahype::plotters::Plotter::UserOnTheFlyPostProcessing {
public:
  {{plotterName}}({{project}}::{{solverName}}& solver);
  virtual ~{{plotterName}}();

  void startPlotting(double time) override;
  void finishPlotting() override;
  void mapQuantities(
    const tarch::la::Vector<DIMENSIONS, double>& offsetOfPatch,
    const tarch::la::Vector<DIMENSIONS, double>& sizeOfPatch,
    const tarch::la::Vector<DIMENSIONS, double>& x,
    const tarch::la::Vector<DIMENSIONS, int>&    pos,
    double* Q,
    double* outputQuantities,
    double timeStamp) override;
};

#endif /* POSTPROCESSING_{{plotterName}}_CLASS_HEADER_ */
